"""–¢–µ—Å—Ç —É–ª—É—á—à–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞ –ø–∏—Å–µ–º"""

import asyncio
import json
import os

async def test_search_cache():
    """–¢–µ—Å—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞"""
    
    print("–¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ö–≠–®–ò–†–û–í–ê–ù–ò–Ø –ü–û–ò–°–ö–ê")
    print("=" * 50)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 555555
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
    test_search_results = [
        {
            'sender': '–¢-–ë–∞–Ω–∫ <inform@emails.tinkoff.ru>',
            'subject': '–ü–æ–ª—É—á–∏—Ç–µ 360 000 ‚ÇΩ',
            'date': 'Tue, 5 Aug 2025',
            'content': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—Å! –ü–æ–ª—É—á–∏—Ç–µ –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∫–∞—Ä—Ç—É —Å –ª–∏–º–∏—Ç–æ–º –¥–æ 360 000 —Ä—É–±–ª–µ–π.'
        },
        {
            'sender': '–Ø–Ω–¥–µ–∫—Å <noreply@yandex.ru>',
            'subject': '–í–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ',
            'date': 'Mon, 4 Aug 2025',
            'content': '–£–≤–µ–¥–æ–º–ª—è–µ–º –æ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ —É—Å–ª–æ–≤–∏—è—Ö –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞.'
        }
    ]
    
    search_query = "—Ç–∏–Ω—å–∫–æ—Ñ—Ñ"
    
    # 1. –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫—ç—à–∞
    print("\n1. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞ –ø–æ–∏—Å–∫–∞:")
    print("-" * 30)
    
    search_cache_dir = "data/search_cache"
    os.makedirs(search_cache_dir, exist_ok=True)
    
    cache_file = os.path.join(search_cache_dir, f"user_{test_user_id}_last_search.json")
    cache_data = {
        'query': search_query,
        'results': test_search_results,
        'timestamp': __import__('datetime').datetime.now().isoformat()
    }
    
    try:
        with open(cache_file, 'w', encoding='utf-8') as f:
            json.dump(cache_data, f, ensure_ascii=False, indent=2)
        print(f"[OK] –ö—ç—à —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ {cache_file}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∫—ç—à–∞: {e}")
        return
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –∫—ç—à–∞
    print("\n2. –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞ –ø–æ–∏—Å–∫–∞:")
    print("-" * 30)
    
    try:
        with open(cache_file, 'r', encoding='utf-8') as f:
            loaded_cache = json.load(f)
        
        loaded_query = loaded_cache.get('query')
        loaded_results = loaded_cache.get('results', [])
        
        print(f"[OK] –ó–∞–≥—Ä—É–∂–µ–Ω –∑–∞–ø—Ä–æ—Å: {loaded_query}")
        print(f"[OK] –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(loaded_results)}")
        
        for i, result in enumerate(loaded_results, 1):
            print(f"  {i}. {result['sender']} - {result['subject']}")
            
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫—ç—à–∞: {e}")
        return
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
    print("\n3. –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∏—Å–∫–∞:")
    print("-" * 30)
    
    settings_dir = "data/search_settings"
    os.makedirs(settings_dir, exist_ok=True)
    settings_file = os.path.join(settings_dir, f"user_{test_user_id}_search.json")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    default_settings = {
        'search_limit': 10,
        'content_analysis': False,
        'search_in_body': True,
        'search_in_attachments': False,
        'date_range_days': 365,
        'priority_search': False
    }
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    user_settings = {
        'search_limit': 20,           # –£–≤–µ–ª–∏—á–∏–ª–∏ –ª–∏–º–∏—Ç
        'content_analysis': True,     # –í–∫–ª—é—á–∏–ª–∏ AI –∞–Ω–∞–ª–∏–∑
        'search_in_body': True,
        'search_in_attachments': True, # –í–∫–ª—é—á–∏–ª–∏ –ø–æ–∏—Å–∫ –≤ –≤–ª–æ–∂–µ–Ω–∏—è—Ö
        'date_range_days': 180,       # –£–º–µ–Ω—å—à–∏–ª–∏ –¥–∏–∞–ø–∞–∑–æ–Ω
        'priority_search': False
    }
    
    try:
        with open(settings_file, 'w', encoding='utf-8') as f:
            json.dump(user_settings, f, ensure_ascii=False, indent=2)
        print(f"[OK] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {settings_file}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    try:
        current_settings = default_settings.copy()
        with open(settings_file, 'r', encoding='utf-8') as f:
            loaded_settings = json.load(f)
            current_settings.update(loaded_settings)
        
        print("[OK] –ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:")
        for key, value in current_settings.items():
            print(f"  {key}: {value}")
            
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return
    
    # 4. –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    print("\n4. –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    print("-" * 30)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º HTML —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (–±–µ–∑ –∏–º–ø–æ—Ä—Ç–∞ utils)
    def simple_escape_html(text):
        return str(text).replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')
    
    def simple_truncate(text, max_len):
        if len(text) <= max_len:
            return simple_escape_html(text)
        return simple_escape_html(text[:max_len-3]) + "..."
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä
    detailed_text = f"üìñ –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –ø–æ–∏—Å–∫–∞\n\n"
    detailed_text += f"üîç –ó–∞–ø—Ä–æ—Å: {simple_escape_html(search_query)}\n"
    detailed_text += f"üì¨ –ù–∞–π–¥–µ–Ω–æ –ø–∏—Å–µ–º: {len(test_search_results)}\n\n"
    
    for i, email_data in enumerate(test_search_results, 1):
        sender = email_data.get('sender', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—å')
        subject = email_data.get('subject', '–ë–µ–∑ —Ç–µ–º—ã')
        date = email_data.get('date', '')
        content = email_data.get('content', '')
        
        detailed_text += f"üìß –ü–∏—Å—å–º–æ {i}:\n"
        detailed_text += f"üë§ –û—Ç: {simple_truncate(sender, 40)}\n"
        detailed_text += f"üìù –¢–µ–º–∞: {simple_truncate(subject, 50)}\n"
        
        if date:
            detailed_text += f"üïê –î–∞—Ç–∞: {simple_escape_html(str(date)[:19])}\n"
        
        if content:
            content_preview = simple_truncate(content.strip(), 150)
            detailed_text += f"üìÑ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:\n{content_preview}\n"
        
        detailed_text += "\n" + "‚îÄ" * 30 + "\n\n"
    
    print("[OK] –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω:")
    print(detailed_text[:500] + "...")
    
    # 5. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("\n5. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    print("-" * 30)
    
    try:
        if os.path.exists(cache_file):
            os.remove(cache_file)
            print("[OK] –ö—ç—à —É–¥–∞–ª–µ–Ω")
        
        if os.path.exists(settings_file):
            os.remove(settings_file)
            print("[OK] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–¥–∞–ª–µ–Ω—ã")
            
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
    
    print("\n" + "=" * 50)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print("[OK] –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞: —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("[OK] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞: —Ä–∞–±–æ—Ç–∞—é—Ç")
    print("[OK] –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: —Ä–∞–±–æ—Ç–∞–µ—Ç")
    print("[OK] –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä: –≥–æ—Ç–æ–≤")
    print("[OK] –°–∏—Å—Ç–µ–º–∞ —É–ª—É—á—à–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞ –≥–æ—Ç–æ–≤–∞!")

if __name__ == "__main__":
    asyncio.run(test_search_cache())
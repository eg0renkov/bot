"""–§–∏–Ω–∞–ª—å–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–ª—É—á—à–µ–Ω–∏–π –ø–æ–∏—Å–∫–∞ –ø–∏—Å–µ–º"""

import asyncio
import json
import os

async def test_complete_search_system():
    """–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∏—Å–∫–∞ —Å –Ω–æ–≤—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏"""
    
    print("–§–ò–ù–ê–õ–¨–ù–´–ô –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ü–û–ò–°–ö–ê –ü–ò–°–ï–ú")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    test_user_id = 777777
    
    # 1. –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∏—Å–∫–∞
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∏—Å–∫–∞:")
    print("-" * 40)
    
    settings_dir = "data/search_settings"
    os.makedirs(settings_dir, exist_ok=True)
    settings_file = os.path.join(settings_dir, f"user_{test_user_id}_search.json")
    
    # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    advanced_settings = {
        'search_limit': 20,               # –£–≤–µ–ª–∏—á–µ–Ω–Ω—ã–π –ª–∏–º–∏—Ç
        'content_analysis': True,         # AI –∞–Ω–∞–ª–∏–∑ –≤–∫–ª—é—á–µ–Ω
        'search_in_body': True,           # –ü–æ–∏—Å–∫ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º
        'search_in_attachments': True,    # –ü–æ–∏—Å–∫ –≤ –≤–ª–æ–∂–µ–Ω–∏—è—Ö
        'date_range_days': 90,            # 3 –º–µ—Å—è—Ü–∞ –Ω–∞–∑–∞–¥
        'priority_search': False          # –ü–æ–ª–Ω—ã–π –ø–æ–∏—Å–∫
    }
    
    try:
        with open(settings_file, 'w', encoding='utf-8') as f:
            json.dump(advanced_settings, f, ensure_ascii=False, indent=2)
        print("[OK] –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã:")
        for key, value in advanced_settings.items():
            print(f"  ‚Ä¢ {key}: {value}")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫: {e}")
        return
    
    # 2. –¢–µ—Å—Ç –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–∏—Å–∫–∞:")
    print("-" * 40)
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–µ —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    comprehensive_results = [
        {
            'sender': '–¢-–ë–∞–Ω–∫ <inform@emails.tinkoff.ru>',
            'subject': '–ü–æ–ª—É—á–∏—Ç–µ 360 000 ‚ÇΩ - —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ',
            'date': 'Tue, 5 Aug 2025 10:30:00',
            'content': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –≤–∞—Å! –ü–æ–ª—É—á–∏—Ç–µ –∫—Ä–µ–¥–∏—Ç–Ω—É—é –∫–∞—Ä—Ç—É —Å –ª–∏–º–∏—Ç–æ–º –¥–æ 360 000 —Ä—É–±–ª–µ–π. –ë–µ–∑ —Å–ø—Ä–∞–≤–æ–∫ –æ –¥–æ—Ö–æ–¥–∞—Ö, –±—ã—Å—Ç—Ä–æ–µ –æ–¥–æ–±—Ä–µ–Ω–∏–µ –∑–∞ 2 –º–∏–Ω—É—Ç—ã.',
            'message_id': 'tinkoff_001'
        },
        {
            'sender': '–Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç–∞ <noreply@yandex.ru>',
            'subject': '–í–∞–∂–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏',
            'date': 'Mon, 4 Aug 2025 14:15:00',
            'content': '–ú—ã –∑–∞–º–µ—Ç–∏–ª–∏ –Ω–µ–æ–±—ã—á–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≤–∞—à–µ–º –∞–∫–∫–∞—É–Ω—Ç–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.',
            'message_id': 'yandex_002'
        },
        {
            'sender': '–°–±–µ—Ä–ë–∞–Ω–∫ <info@sberbank.ru>',
            'subject': '–í—ã–ø–∏—Å–∫–∞ –ø–æ –∫–∞—Ä—Ç–µ –∑–∞ –∏—é–ª—å 2025',
            'date': 'Sun, 3 Aug 2025 09:00:00',
            'content': '–í–∞—à–∞ –≤—ã–ø–∏—Å–∫–∞ –ø–æ –¥–µ–±–µ—Ç–æ–≤–æ–π –∫–∞—Ä—Ç–µ *1234 –∑–∞ –∏—é–ª—å 2025. –í—Å–µ–≥–æ –æ–ø–µ—Ä–∞—Ü–∏–π: 45, –æ–±—â–∞—è —Å—É–º–º–∞ —Ç—Ä–∞—Ç: 78 540 —Ä—É–±–ª–µ–π.',
            'message_id': 'sber_003'
        }
    ]
    
    search_query = "–±–∞–Ω–∫"
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—ç—à
    search_cache_dir = "data/search_cache"
    os.makedirs(search_cache_dir, exist_ok=True)
    
    cache_file = os.path.join(search_cache_dir, f"user_{test_user_id}_last_search.json")
    cache_data = {
        'query': search_query,
        'results': comprehensive_results,
        'timestamp': __import__('datetime').datetime.now().isoformat(),
        'settings_used': advanced_settings
    }
    
    try:
        with open(cache_file, 'w', encoding='utf-8') as f:
            json.dump(cache_data, f, ensure_ascii=False, indent=2)
        print(f"[OK] –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω—ã")
        print(f"  ‚Ä¢ –ó–∞–ø—Ä–æ—Å: '{search_query}'")
        print(f"  ‚Ä¢ –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(comprehensive_results)}")
        print(f"  ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã: {len(advanced_settings)} –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤")
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return
    
    # 3. –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
    print("-" * 40)
    
    # –ü—Ä–æ—Å—Ç–∞—è HTML-—ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∫–∞ –¥–ª—è —Ç–µ—Å—Ç–∞
    def test_escape_html(text):
        return str(text).replace('&', '&amp;').replace('<', '&lt;').replace('>', '&gt;')
    
    def test_truncate(text, max_len):
        if len(text) <= max_len:
            return test_escape_html(text)
        return test_escape_html(text[:max_len-3]) + "..."
    
    # –ö—Ä–∞—Ç–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("[OK] –ö—Ä–∞—Ç–∫–∏–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    for i, result in enumerate(comprehensive_results, 1):
        sender_short = test_truncate(result['sender'], 25)
        subject_short = test_truncate(result['subject'], 35)
        print(f"  {i}. üë§ {sender_short}")
        print(f"     üìù {subject_short}")
        print(f"     üïê {result['date'][:16]}")
    
    print()
    
    # –î–µ—Ç–∞–ª—å–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("[OK] –î–µ—Ç–∞–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:")
    for i, result in enumerate(comprehensive_results[:2], 1):  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 2
        print(f"üìß –ü–∏—Å—å–º–æ {i}:")
        print(f"üë§ –û—Ç: {test_truncate(result['sender'], 40)}")
        print(f"üìù –¢–µ–º–∞: {test_truncate(result['subject'], 50)}")
        print(f"üïê –î–∞—Ç–∞: {test_escape_html(result['date'][:19])}")
        print(f"üìÑ –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:")
        print(f"   {test_truncate(result['content'], 120)}")
        print("‚îÄ" * 30)
    
    # 4. –¢–µ—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    print("-" * 40)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è
    test_limits = [5, 10, 20, 50]
    current_limit = advanced_settings['search_limit']
    
    try:
        current_index = test_limits.index(current_limit)
        next_limit = test_limits[(current_index + 1) % len(test_limits)]
        print(f"[OK] –õ–∏–º–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {current_limit} ‚Üí {next_limit}")
    except ValueError:
        print(f"[OK] –õ–∏–º–∏—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å–±—Ä–æ—à–µ–Ω –∫ —É–º–æ–ª—á–∞–Ω–∏—é: {current_limit} ‚Üí {test_limits[0]}")
    
    test_ranges = [30, 90, 180, 365]
    current_days = advanced_settings['date_range_days']
    
    try:
        current_index = test_ranges.index(current_days)
        next_days = test_ranges[(current_index + 1) % len(test_ranges)]
        print(f"[OK] –î–∏–∞–ø–∞–∑–æ–Ω –ø–æ–∏—Å–∫–∞: {current_days} –¥–Ω ‚Üí {next_days} –¥–Ω")
    except ValueError:
        print(f"[OK] –î–∏–∞–ø–∞–∑–æ–Ω —Å–±—Ä–æ—à–µ–Ω –∫ —É–º–æ–ª—á–∞–Ω–∏—é: {current_days} –¥–Ω ‚Üí {test_ranges[0]} –¥–Ω")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏
    toggles = {
        'content_analysis': 'AI –∞–Ω–∞–ª–∏–∑ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏—è',
        'search_in_body': '–ü–æ–∏—Å–∫ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º',
        'search_in_attachments': '–ü–æ–∏—Å–∫ –≤ –≤–ª–æ–∂–µ–Ω–∏—è—Ö', 
        'priority_search': '–ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫'
    }
    
    print("[OK] –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫:")
    for key, description in toggles.items():
        current_state = advanced_settings.get(key, False)
        new_state = not current_state
        state_text = "‚úÖ" if new_state else "‚ùå"
        print(f"  ‚Ä¢ {description}: {current_state} ‚Üí {new_state} {state_text}")
    
    # 5. –¢–µ—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    print("\n5. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:")
    print("-" * 40)
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –∫–ª–∞–≤–∏–∞—Ç—É—Ä
    search_results_buttons = [
        "üìñ –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä",
        "üì® –ö –≤—Ö–æ–¥—è—â–∏–º", "üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫", "‚ùå –í—ã–π—Ç–∏"
    ]
    
    detailed_view_buttons = [
        "üì® –ö –≤—Ö–æ–¥—è—â–∏–º", "üîç –ù–æ–≤—ã–π –ø–æ–∏—Å–∫",
        "‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º", "‚ùå –í—ã–π—Ç–∏"
    ]
    
    settings_buttons = [
        f"üìà –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {advanced_settings['search_limit']}",
        "üîç –ü–æ–∏—Å–∫ –≤ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º: ‚úÖ",
        "üß† AI –∞–Ω–∞–ª–∏–∑: ‚úÖ",
        "üìé –ü–æ–∏—Å–∫ –≤ –≤–ª–æ–∂–µ–Ω–∏—è—Ö: ‚úÖ",
        f"üìÖ –î–∏–∞–ø–∞–∑–æ–Ω: {advanced_settings['date_range_days']} –¥–Ω",
        "‚ö° –ë—ã—Å—Ç—Ä—ã–π –ø–æ–∏—Å–∫: ‚ùå",
        "üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", "üîÑ –°–±—Ä–æ—Å–∏—Ç—å",
        "‚óÄÔ∏è –ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º"
    ]
    
    print("[OK] –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞:")
    print(f"  –†—è–¥ 1: {search_results_buttons[0]}")
    print(f"  –†—è–¥ 2: {' | '.join(search_results_buttons[1:])}")
    
    print("[OK] –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:")
    print(f"  –†—è–¥ 1: {' | '.join(detailed_view_buttons[:2])}")
    print(f"  –†—è–¥ 2: {' | '.join(detailed_view_buttons[2:])}")
    
    print("[OK] –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–∏—Å–∫–∞:")
    for i, button in enumerate(settings_buttons):
        if i < 6:
            print(f"  –†—è–¥ {i+1}: {button}")
        elif i == 6:
            print(f"  –†—è–¥ 7: {button} | {settings_buttons[7]}")
        elif i == 8:
            print(f"  –†—è–¥ 8: {button}")
    
    # 6. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    print("\n6. –û—á–∏—Å—Ç–∫–∞ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö:")
    print("-" * 40)
    
    cleaned_files = []
    try:
        if os.path.exists(cache_file):
            os.remove(cache_file)
            cleaned_files.append("–∫—ç—à –ø–æ–∏—Å–∫–∞")
        
        if os.path.exists(settings_file):
            os.remove(settings_file)
            cleaned_files.append("–Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞")
        
        if cleaned_files:
            print(f"[OK] –û—á–∏—â–µ–Ω–æ: {', '.join(cleaned_files)}")
        else:
            print("[OK] –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏")
            
    except Exception as e:
        print(f"[ERROR] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏: {e}")
    
    # –§–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç—á–µ—Ç
    print("\n" + "=" * 60)
    print("–§–ò–ù–ê–õ–¨–ù–´–ô –û–¢–ß–ï–¢ - –°–ò–°–¢–ï–ú–ê –ü–û–ò–°–ö–ê –ü–ò–°–ï–ú:")
    print("=" * 60)
    
    features = [
        ("‚úÖ –ö–Ω–æ–ø–∫–∞ –≤—ã—Ö–æ–¥–∞", "–î–æ–±–∞–≤–ª–µ–Ω–∞ –≤–æ –≤—Å–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞"),
        ("‚úÖ –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä", "–ü–æ–ª–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –ø–∏—Å–µ–º —Å –Ω–∞–≤–∏–≥–∞—Ü–∏–µ–π"),
        ("‚úÖ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞", "6 –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"),
        ("‚úÖ –ö—ç—à–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ë—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º"),
        ("‚úÖ HTML –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å", "–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö"),
        ("‚úÖ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏", "–í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç"),
        ("‚úÖ –¶–∏–∫–ª–∏—á–µ—Å–∫–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è", "–£–¥–æ–±–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤"),
        ("‚úÖ –°–±—Ä–æ—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫", "–í–æ–∑–≤—Ä–∞—Ç –∫ –∑–Ω–∞—á–µ–Ω–∏—è–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é"),
        ("‚úÖ –ü–æ–ª–Ω–∞—è –Ω–∞–≤–∏–≥–∞—Ü–∏—è", "–ü–µ—Ä–µ—Ö–æ–¥—ã –º–µ–∂–¥—É –≤—Å–µ–º–∏ —Ä–∞–∑–¥–µ–ª–∞–º–∏")
    ]
    
    for feature, description in features:
        print(f"{feature} {description}")
    
    print("\nüéØ –°–ò–°–¢–ï–ú–ê –ü–û–õ–ù–û–°–¢–¨–Æ –ì–û–¢–û–í–ê –ö –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Æ!")
    print("   –¢–µ–ø–µ—Ä—å –ø–æ–∏—Å–∫ –ø–∏—Å–µ–º –∏–º–µ–µ—Ç:")
    print("   ‚Ä¢ –î–µ—Ç–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä —Å –ø–æ–ª–Ω—ã–º —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ–º")
    print("   ‚Ä¢ –ì–∏–±–∫–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≥–ª—É–±–∏–Ω—ã –ø–æ–∏—Å–∫–∞")
    print("   ‚Ä¢ –£–¥–æ–±–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é —Å –∫–Ω–æ–ø–∫–æ–π –≤—ã—Ö–æ–¥–∞")
    print("   ‚Ä¢ –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ª—é–±—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤")

if __name__ == "__main__":
    asyncio.run(test_complete_search_system())
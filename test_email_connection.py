#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Yandex –ø–æ—á—Ç–µ –æ—Ç–¥–µ–ª—å–Ω–æ –æ—Ç –±–æ—Ç–∞
"""

import asyncio
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from utils.email_sender_real import RealEmailSender

async def test_email_connection():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –ø–æ—á—Ç–µ"""
    print("–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Yandex –ø–æ—á—Ç–µ")
    print("=" * 40)
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    email = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à email: ").strip()
    password = input("–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: ").strip()
    
    if not email or not password:
        print("‚ùå Email –∏ –ø–∞—Ä–æ–ª—å –Ω–µ –º–æ–≥—É—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º–∏")
        return False
    
    print(f"\nüîÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –¥–ª—è {email}...")
    print("‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º SMTP –∏ IMAP —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è...")
    
    try:
        sender = RealEmailSender()
        result = await sender.test_connection(email, password)
        
        print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:")
        print(f"‚úÖ –£—Å–ø–µ—Ö: {'–î–∞' if result['success'] else '–ù–µ—Ç'}")
        print(f"üìù –°–æ–æ–±—â–µ–Ω–∏–µ: {result['message']}")
        
        # –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ –ø—Ä–æ—Ç–æ–∫–æ–ª–∞–º
        if 'smtp' in result:
            smtp_status = "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" if result['smtp']['success'] else "‚ùå –û—à–∏–±–∫–∞"
            print(f"üì§ SMTP: {smtp_status} - {result['smtp'].get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
            if not result['smtp']['success'] and 'error' in result['smtp']:
                print(f"   –î–µ—Ç–∞–ª–∏: {result['smtp']['error']}")
        
        if 'imap' in result:
            imap_status = "‚úÖ –†–∞–±–æ—Ç–∞–µ—Ç" if result['imap']['success'] else "‚ùå –û—à–∏–±–∫–∞"
            print(f"üì• IMAP: {imap_status} - {result['imap'].get('message', '–ù–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è')}")
            if not result['imap']['success'] and 'error' in result['imap']:
                print(f"   –î–µ—Ç–∞–ª–∏: {result['imap']['error']}")
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π —Å–ª—É—á–∞–π: SMTP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω, –Ω–æ IMAP —Ä–∞–±–æ—Ç–∞–µ—Ç
        if result.get('suggestion') == 'smtp_blocked':
            print(f"\nüö´ –î–ò–ê–ì–ù–û–ó: SMTP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º")
            print(f"üì• –•–æ—Ä–æ—à–∏–µ –Ω–æ–≤–æ—Å—Ç–∏: –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üì§ –ü–ª–æ—Ö–∏–µ –Ω–æ–≤–æ—Å—Ç–∏: –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
            print(f"\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:")
            print(f"‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç")
            print(f"‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç–µ VPN/–ø—Ä–æ–∫—Å–∏")
            print(f"‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É")
            print(f"‚Ä¢ –ë–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ '—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ'")
            
            # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Ç–µ—Å—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏
            test_alt = input("\n–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª)? (y/n): ").strip().lower()
            if test_alt == 'y':
                from utils.email_sender_web import web_email_sender
                to_email = input("–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—É—á–∞—Ç–µ–ª—è –¥–ª—è —Ç–µ—Å—Ç–∞: ").strip()
                if to_email:
                    print("üíæ –¢–µ—Å—Ç–∏—Ä—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª)...")
                    alt_result = await web_email_sender.simulate_send(
                        email, to_email, 
                        "–¢–µ—Å—Ç –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏",
                        "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ –≤ —Ñ–∞–π–ª, —Ç–∞–∫ –∫–∞–∫ SMTP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω."
                    )
                    if alt_result:
                        print("‚úÖ –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏")
            
            return False  # –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏ –Ω–µ –ø–æ–ª–Ω—ã–π —É—Å–ø–µ—Ö, –Ω–æ —á–∞—Å—Ç–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
            
        elif result['success']:
            print(f"\nüéâ –ü–æ–ª–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
            test_send = input("\n–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ? (y/n): ").strip().lower()
            if test_send == 'y':
                to_email = input("–í–≤–µ–¥–∏—Ç–µ email –ø–æ–ª—É—á–∞—Ç–µ–ª—è: ").strip()
                if to_email:
                    print("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ...")
                    
                    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                    from database.user_tokens import user_tokens
                    test_user_id = 999999  # –¢–µ—Å—Ç–æ–≤—ã–π ID
                    
                    email_data = {
                        'email': email,
                        'password': password,
                        'smtp_server': 'smtp.yandex.ru',
                        'smtp_port': 587
                    }
                    
                    await user_tokens.save_token(test_user_id, "email_smtp", {
                        'access_token': 'smtp_configured', 
                        'user_info': email_data
                    })
                    
                    send_result = await sender.send_email(
                        test_user_id,
                        to_email,
                        "–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç –±–æ—Ç–∞",
                        "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç Telegram AI –±–æ—Ç–∞.\n\n–ï—Å–ª–∏ –≤—ã –ø–æ–ª—É—á–∏–ª–∏ —ç—Ç–æ –ø–∏—Å—å–º–æ, –∑–Ω–∞—á–∏—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!"
                    )
                    
                    if send_result:
                        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
                    else:
                        print("‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞")
            
            return True
        else:
            print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:")
            print(f"üîß –ü—Ä–æ–±–ª–µ–º–∞: {result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')}")
            
            print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
            if '10060' in str(result.get('error', '')) or 'timeout' in str(result.get('error', '')).lower():
                print(f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ")
                print(f"‚Ä¢ –í–æ–∑–º–æ–∂–Ω–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º")
                print(f"‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç")
                print(f"‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç–µ VPN/–ø—Ä–æ–∫—Å–∏")
            else:
                print(f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–∞—Ä–æ–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
                print(f"‚Ä¢ –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞")
                print(f"‚Ä¢ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å email")
                print(f"‚Ä¢ –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è")
            
            return False
            
    except Exception as e:
        print(f"\n‚ùå –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    try:
        result = asyncio.run(test_email_connection())
        print(f"\n{'='*40}")
        if result:
            print("üéâ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
            print("üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–æ—Ç–µ")
        else:
            print("‚ö†Ô∏è –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.")
        sys.exit(0 if result else 1)
    except KeyboardInterrupt:
        print("\n\n‚èπÔ∏è –¢–µ—Å—Ç –ø—Ä–µ—Ä–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
        sys.exit(1)
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
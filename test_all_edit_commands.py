#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Тест всех команд редактирования email
"""

import re

def extract_email_edit_command_test(text):
    """Тестовая версия извлечения команд"""
    edit_patterns = [
        # Команды добавления/дописывания
        r"допиш[иь].*?(.+)",
        r"доба[вь].*?(.+)",
        r"дополн[иь].*?(.+)",
        r"добавь\s+(.+)",
        r"дописать\s+(.+)",
        r"дополнить\s+(.+)",
        r"приба[вь].*?(.+)",
        r"включ[иь].*?(.+)",
        r"вста[вь].*?(.+)",
        
        # Команды изменения/замены
        r"измен[иь].*?(.+)",
        r"замен[иь].*?(.+)",
        r"поменя[йь].*?(.+)",
        r"смен[иь].*?(.+)",
        r"обнов[иь].*?(.+)",
        
        # Команды исправления/редактирования
        r"исправ[ьи].*?(.+)",
        r"поправ[ьи].*?(.+)",
        r"откорректир.*?(.+)",
        r"редактир.*?(.+)",
        r"правк[аи].*?(.+)",
        
        # Команды переписывания
        r"перепиш[иь].*?(.+)",
        r"перефразир.*?(.+)",
        r"переформулир.*?(.+)",
        r"переработ.*?(.+)",
        
        # Команды улучшения
        r"улучш[иь].*?(.+)",
        r"доработа[йь].*?(.+)",
        r"усовершенств.*?(.+)",
    ]
    
    for pattern in edit_patterns:
        match = re.search(pattern, text, re.IGNORECASE)
        if match:
            edit_text = match.group(1).strip()
            return {
                "type": "edit",
                "text": edit_text,
                "original_command": text
            }
    
    return None

def test_all_edit_commands():
    """Тест всех команд редактирования"""
    print("=== ТЕСТ ВСЕХ КОМАНД РЕДАКТИРОВАНИЯ ===")
    print()
    
    test_commands = [
        # Команды добавления
        "допиши добрый день Александр",
        "добавь информацию о встрече",
        "дополни текст важными деталями",
        "добавь благодарность в конце",
        "дописать P.S. жду ответа",
        "дополнить письмо контактами",
        "прибавь еще один пункт",
        "включи информацию о дате",
        "вставь абзац о проекте",
        
        # Команды замены
        "измени текст на новый",
        "замени это на другое",
        "поменяй тему письма",
        "смени тон на более официальный",
        "обнови информацию",
        
        # Команды исправления
        "исправь ошибки в тексте",
        "поправь грамматику",
        "откорректируй стиль письма",
        "редактируй для лучшего понимания",
        "правка орфографии нужна",
        
        # Команды переписывания
        "перепиши это письмо",
        "перефразируй основную мысль",
        "переформулируй вежливее",
        "переработай структуру",
        
        # Команды улучшения
        "улучши стиль письма",
        "доработай заключение",
        "усовершенствуй формулировки"
    ]
    
    print("РЕЗУЛЬТАТЫ РАСПОЗНАВАНИЯ:")
    print("-" * 60)
    
    success_count = 0
    total_count = len(test_commands)
    
    for i, cmd in enumerate(test_commands, 1):
        result = extract_email_edit_command_test(cmd)
        if result:
            print(f"{i:2d}. РАСПОЗНАНО: '{cmd}'")
            print(f"    -> Текст: '{result['text']}'")
            success_count += 1
        else:
            print(f"{i:2d}. НЕ РАСПОЗНАНО: '{cmd}'")
        print()
    
    print("=" * 60)
    print(f"ИТОГО: {success_count}/{total_count} команд распознано")
    print(f"Процент успеха: {success_count/total_count*100:.1f}%")
    
    if success_count == total_count:
        print("ОТЛИЧНО! Все команды распознаются!")
    else:
        print("НУЖНА ДОРАБОТКА: не все команды распознаются")

if __name__ == "__main__":
    test_all_edit_commands()
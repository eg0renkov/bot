from aiogram import Router, F
from aiogram.types import Message, CallbackQuery, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from utils.keyboards import keyboards
from database.user_tokens import user_tokens
from utils.email_sender import email_sender
from utils.html_utils import escape_html, escape_email
import re

router = Router()

async def send_error_message(callback: CallbackQuery, error_msg: str, details: str = "", state: FSMContext = None):
    """–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ"""
    # –ü—Ä–æ—Å—Ç–æ–π —Ç–µ–∫—Å—Ç –±–µ–∑ —Å–ª–æ–∂–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    error_text = f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n\n–ü—Ä–æ–±–ª–µ–º–∞: {error_msg[:150]}"
    
    if details:
        error_text += f"\n\n–î–µ—Ç–∞–ª–∏: {details[:80]}"
    
    error_text += "\n\n–ù–∞–∂–º–∏—Ç–µ /start –¥–ª—è –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–∏"

    # –í–ê–ñ–ù–û: –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ
    if state:
        await state.clear()

    try:
        # –ü–æ–ª–Ω–æ—Å—Ç—å—é –±–µ–∑ reply_markup –∏ —Å–ª–æ–∂–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await callback.message.edit_text(error_text)
    except:
        try:
            await callback.message.answer(error_text)
        except:
            await callback.message.answer("–û—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ /start")

class EmailSetupStates(StatesGroup):
    waiting_for_email = State()
    waiting_for_password = State()
    confirming_setup = State()

def create_fresh_setup_menu():
    """–°–æ–∑–¥–∞–µ—Ç —Å–≤–µ–∂–µ–µ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üöÄ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç—É", callback_data="email_setup_start"),
        InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://teletype.in/@asterioai/yandex-mail"),
        InlineKeyboardButton(text="üîë –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?", callback_data="email_setup_help"),
        InlineKeyboardButton(text="‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ", callback_data="email_setup_check"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é", callback_data="menu_back")
    )
    builder.adjust(1, 1, 1, 1, 1)
    return builder.as_markup()

def create_fresh_confirmation_menu():
    """–°–æ–∑–¥–∞–µ—Ç —Å–≤–µ–∂–µ–µ –º–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", callback_data="email_setup_save"),
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email", callback_data="email_setup_edit_email"),
        InlineKeyboardButton(text="üîë –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å", callback_data="email_setup_edit_password"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="email_setup_cancel")
    )
    builder.adjust(1, 2, 1)
    return builder.as_markup()

class EmailSetupWizard:
    """–ú–∞—Å—Ç–µ—Ä –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ email"""
    
    @staticmethod
    def get_setup_menu():
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        return create_fresh_setup_menu()
    
    @staticmethod
    def get_confirmation_menu():
        """–ú–µ–Ω—é –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
        return create_fresh_confirmation_menu()

setup_wizard = EmailSetupWizard()

@router.callback_query(F.data == "connect_yandex_mail")
async def start_email_setup(callback: CallbackQuery):
    """–ù–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –ø–æ—á—Ç—ã"""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ –ª–∏ –ø–æ—á—Ç–∞
    user_id = callback.from_user.id
    is_connected = await email_sender.can_send_email(user_id)
    
    if is_connected:
        await callback.message.edit_text(
            "‚úÖ <b>–Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç–∞ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞!</b>\n\n"
            "üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
            "‚Ä¢ ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º\n"
            "‚Ä¢ üì• –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Ö–æ–¥—è—â–∏—Ö\n"
            "‚Ä¢ üîç –ü–æ–∏—Å–∫ –ø–æ –ø–æ—á—Ç–µ\n"
            "‚Ä¢ üìä –ê–Ω–∞–ª–∏–∑ –ø–∏—Å–µ–º —Å AI\n"
            "‚Ä¢ üìã –†–∞–±–æ—Ç–∞ —Å —á–µ—Ä–Ω–æ–≤–∏–∫–∞–º–∏\n\n"
            "üí° <b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:</b>\n"
            "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ: \"–æ—Ç–ø—Ä–∞–≤—å email@example.com –æ–± –≤–∞–∂–Ω–æ–π —Ç–µ–º–µ\"",
            reply_markup=setup_wizard.get_setup_menu(),
            parse_mode="HTML"
        )
    else:
        await callback.message.edit_text(
            "üìß <b>–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç—ã</b>\n\n"
            "üöÄ <b>–ü–æ—Å–ª–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –≤—ã —Å–º–æ–∂–µ—Ç–µ:</b>\n"
            "‚Ä¢ ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è—Ç—å –ø–∏—Å—å–º–∞ –≥–æ–ª–æ—Å–æ–º –∏ —Ç–µ–∫—Å—Ç–æ–º\n"
            "‚Ä¢ üì• –ß–∏—Ç–∞—Ç—å –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞\n"
            "‚Ä¢ üîç –ò—Å–∫–∞—Ç—å –ø–∏—Å—å–º–∞ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É\n"
            "‚Ä¢ ü§ñ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø–∏—Å—å–º–∞ —Å –ø–æ–º–æ—â—å—é AI\n"
            "‚Ä¢ üìù –ì–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–≤–µ—Ç—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏\n\n"
            "‚ö° <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–π–º–µ—Ç 3 –º–∏–Ω—É—Ç—ã</b>\n\n"
            "üîí <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å:</b> –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–∞—Ä–æ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ø–Ω–¥–µ–∫—Å",
            reply_markup=setup_wizard.get_setup_menu(),
            parse_mode="HTML"
        )
    
    await callback.answer()

@router.callback_query(F.data == "email_setup_start")
async def email_setup_step1(callback: CallbackQuery, state: FSMContext):
    """–®–∞–≥ 1: –í–≤–æ–¥ email"""
    navigation_keyboard = InlineKeyboardBuilder()
    navigation_keyboard.add(
        InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://teletype.in/@asterioai/yandex-mail"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="connect_yandex_mail"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="email_setup_cancel")
    )
    navigation_keyboard.adjust(1, 2)
    
    await callback.message.edit_text(
        "üìß <b>–®–∞–≥ 1 –∏–∑ 3: –í–∞—à email</b>\n\n"
        "üìù –í–≤–µ–¥–∏—Ç–µ –≤–∞—à email –æ—Ç –Ø–Ω–¥–µ–∫—Å:\n"
        "(–Ω–∞–ø—Ä–∏–º–µ—Ä: your_name@yandex.ru)\n\n"
        "‚ö†Ô∏è <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å–∞:</b>\n"
        "‚Ä¢ @yandex.ru ‚Ä¢ @yandex.com ‚Ä¢ @ya.ru ‚Ä¢ @narod.ru\n\n"
        "üìö <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –ù–∞–∂–º–∏—Ç–µ \"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è\"\n\n"
        "‚úèÔ∏è <i>–ù–∞–ø–∏—à–∏—Ç–µ –≤–∞—à email –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏</i>",
        reply_markup=navigation_keyboard.as_markup(),
        parse_mode="HTML"
    )
    
    await state.set_state(EmailSetupStates.waiting_for_email)
    await callback.answer()

@router.callback_query(F.data == "email_setup_help")
async def email_setup_help(callback: CallbackQuery):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –ø–∞—Ä–æ–ª—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    help_keyboard = InlineKeyboardBuilder()
    help_keyboard.add(
        InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏", url="https://teletype.in/@asterioai/yandex-mail"),
        InlineKeyboardButton(text="üöÄ –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É", callback_data="email_setup_start"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="connect_yandex_mail")
    )
    help_keyboard.adjust(1, 2)
    
    await callback.message.edit_text(
        "üîë <b>–ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è - —á—Ç–æ —ç—Ç–æ?</b>\n\n"
        "ü§ñ –≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ—á—Ç—ã –∫ –±–æ—Ç—É.\n"
        "üõ°Ô∏è <b>–ë–µ–∑–æ–ø–∞—Å–Ω–æ:</b> –æ—Ç–¥–µ–ª—å–Ω—ã–π –æ—Ç –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –ø–∞—Ä–æ–ª—è, –º–æ–∂–Ω–æ –æ—Ç–æ–∑–≤–∞—Ç—å.\n\n"
        "üöÄ <b>–ë—ã—Å—Ç—Ä–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ (3 –º–∏–Ω—É—Ç—ã):</b>\n\n"
        "1Ô∏è‚É£ –û—Ç–∫—Ä–æ–π—Ç–µ <code>id.yandex.ru</code>\n"
        "2Ô∏è‚É£ –í–æ–π–¥–∏—Ç–µ –≤ –∞–∫–∫–∞—É–Ω—Ç ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n"
        "3Ô∏è‚É£ –í–∫–ª—é—á–∏—Ç–µ 2FA (–µ—Å–ª–∏ –Ω–µ –≤–∫–ª—é—á–µ–Ω–∞)\n"
        "4Ô∏è‚É£ –ü–∞—Ä–æ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π ‚Üí –°–æ–∑–¥–∞—Ç—å\n"
        "5Ô∏è‚É£ –ù–∞–∑–≤–∞–Ω–∏–µ: \"Telegram Bot\"\n"
        "6Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ –ø–∞—Ä–æ–ª—å –≤ –±–æ—Ç\n\n"
        "üí° <b>–ü–∞—Ä–æ–ª—å:</b> 16 —Å–∏–º–≤–æ–ª–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä <code>abcd1234abcd1234</code>\n\n"
        "üìö <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏!",
        reply_markup=help_keyboard.as_markup(),
        parse_mode="HTML"
    )
    await callback.answer()

@router.callback_query(F.data == "email_setup_check")
async def email_setup_check(callback: CallbackQuery):
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ"""
    user_id = callback.from_user.id
    is_connected = await email_sender.can_send_email(user_id)
    
    if is_connected:
        # –ü–æ–ª—É—á–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        email_data = await user_tokens.get_user_info(user_id, "email_smtp")
        
        if email_data:
            await callback.message.edit_text(
                "‚úÖ <b>–ü–æ—á—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</b>\n\n"
                f"üìß <b>Email:</b> {escape_email(email_data.get('email', '–ù–µ —É–∫–∞–∑–∞–Ω'))}\n"
                f"üîó <b>–°–µ—Ä–≤–µ—Ä:</b> smtp.yandex.ru:587\n"
                f"üîê <b>–ü–∞—Ä–æ–ª—å:</b> ‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢\n\n"
                "üéØ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
                "‚Ä¢ \"–æ—Ç–ø—Ä–∞–≤—å test@example.com –æ–± –≤–∞–∂–Ω–æ–π —Ç–µ–º–µ\"\n"
                "‚Ä¢ \"–ø–æ–∫–∞–∂–∏ –≤—Ö–æ–¥—è—â–∏–µ –ø–∏—Å—å–º–∞\"\n"
                "‚Ä¢ \"–Ω–∞–π–¥–∏ –ø–∏—Å—å–º–∞ –æ—Ç –ò–≤–∞–Ω\"\n\n"
                "üí° <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ:</b> –ó–∞–∫—Ä–æ–π—Ç–µ –º–µ–Ω—é –∏ –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É!",
                reply_markup=setup_wizard.get_setup_menu(),
                parse_mode="HTML"
            )
        else:
            await callback.message.edit_text(
                "‚ö†Ô∏è <b>–î–∞–Ω–Ω—ã–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–≤—Ä–µ–∂–¥–µ–Ω—ã</b>\n\n"
                "üîß –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å –ø–æ—á—Ç—É –∑–∞–Ω–æ–≤–æ.",
                reply_markup=setup_wizard.get_setup_menu(),
                parse_mode="HTML"
            )
    else:
        await callback.message.edit_text(
            "‚ùå <b>–ü–æ—á—Ç–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞</b>\n\n"
            "üìù <b>–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:</b>\n"
            "1. –ù–∞–∂–º–∏—Ç–µ \"üìß –ü–æ–¥–∫–ª—é—á–∏—Ç—å –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç—É\"\n"
            "2. –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º\n\n"
            "‚ùì <b>–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?</b> –ù–∞–∂–º–∏—Ç–µ \"üîë –ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?\"",
            reply_markup=setup_wizard.get_setup_menu(),
            parse_mode="HTML"
        )
    
    await callback.answer()

@router.message(EmailSetupStates.waiting_for_email)
async def email_setup_step2_email(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ email"""
    email = message.text.strip().lower()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å email
    email_pattern = r'^[a-zA-Z0-9._%+-]+@(yandex\.(ru|com)|ya\.ru|narod\.ru)$'
    
    if not re.match(email_pattern, email):
        await message.answer(
            "‚ùå <b>–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π email</b>\n\n"
            "üìù <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å–∞ –Ø–Ω–¥–µ–∫—Å:</b>\n"
            "‚Ä¢ your_name@yandex.ru\n"
            "‚Ä¢ your_name@yandex.com\n"
            "‚Ä¢ your_name@ya.ru\n"
            "‚Ä¢ your_name@narod.ru\n\n"
            "‚úèÔ∏è <i>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑:</i>",
            parse_mode="HTML"
        )
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º email –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(email=email)
    
    navigation_keyboard = InlineKeyboardBuilder()
    navigation_keyboard.add(
        InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://teletype.in/@asterioai/yandex-mail"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email", callback_data="email_setup_edit_email"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="email_setup_cancel")
    )
    navigation_keyboard.adjust(1, 2)
    
    await message.answer(
        "‚úÖ <b>Email –ø—Ä–∏–Ω—è—Ç!</b>\n\n"
        f"üìß <b>–í–∞—à email:</b> {email}\n\n"
        "üîë <b>–®–∞–≥ 2 –∏–∑ 3: –ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</b>\n\n"
        "üìã <b>–ß—Ç–æ —Ç–∞–∫–æ–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è?</b>\n"
        "–≠—Ç–æ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ø–∞—Ä–æ–ª—å –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ–≥–æ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ—á—Ç—ã –∫ –±–æ—Ç—É.\n\n"
        "üöÄ <b>–ö–∞–∫ –ø–æ–ª—É—á–∏—Ç—å:</b>\n"
        "1. –û—Ç–∫—Ä–æ–π—Ç–µ <code>id.yandex.ru</code>\n"
        "2. –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å ‚Üí –ü–∞—Ä–æ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π\n"
        "3. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è \"Telegram Bot\"\n\n"
        "üìö <b>–ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è</b> —Å –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—ã—à–µ\n\n"
        "üîê <i>–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Å–ª–µ–¥—É—é—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:</i>",
        reply_markup=navigation_keyboard.as_markup(),
        parse_mode="HTML"
    )
    
    await state.set_state(EmailSetupStates.waiting_for_password)

@router.message(EmailSetupStates.waiting_for_password)
async def email_setup_step3_password(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤–≤–æ–¥–∞ –ø–∞—Ä–æ–ª—è"""
    password = message.text.strip()
    
    # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –ø–∞—Ä–æ–ª–µ–º –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏
    try:
        await message.delete()
    except:
        pass
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–∞—Ä–æ–ª—è (–æ–±—ã—á–Ω–æ 16 —Å–∏–º–≤–æ–ª–æ–≤)
    if len(password) < 8:
        await message.answer(
            "‚ùå <b>–ü–∞—Ä–æ–ª—å —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π</b>\n\n"
            "üîë <b>–ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ø–Ω–¥–µ–∫—Å:</b>\n"
            "‚Ä¢ –û–±—ã—á–Ω–æ 16 —Å–∏–º–≤–æ–ª–æ–≤\n"
            "‚Ä¢ –°–æ–¥–µ—Ä–∂–∏—Ç –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã\n"
            "‚Ä¢ –ë–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –∏ —Å–ø–µ—Ü—Å–∏–º–≤–æ–ª–æ–≤\n\n"
            "üí° <b>–ü—Ä–∏–º–µ—Ä:</b> <code>abcdabcdabcdabcd</code>\n\n"
            "üîê <i>–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –ø–∞—Ä–æ–ª—å:</i>",
            parse_mode="HTML"
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º email –∏–∑ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    data = await state.get_data()
    email = data.get('email')
    
    if not email:
        await message.answer(
            "‚ùå <b>–û—à–∏–±–∫–∞:</b> Email –ø–æ—Ç–µ—Ä—è–Ω\n\n"
            "üîÑ –ù–∞—á–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ"
        )
        await state.clear()
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    await state.update_data(password=password)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    masked_password = password[:4] + '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢'
    
    confirmation_keyboard = InlineKeyboardBuilder()
    confirmation_keyboard.add(
        InlineKeyboardButton(text="‚úÖ –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø–æ—á—Ç—É", callback_data="email_setup_save"),
        InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://teletype.in/@asterioai/yandex-mail"),
        InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email", callback_data="email_setup_edit_email"),
        InlineKeyboardButton(text="üîë –ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å", callback_data="email_setup_edit_password"),
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="email_setup_cancel")
    )
    confirmation_keyboard.adjust(1, 1, 2, 1)
    
    await message.answer(
        "üîç <b>–®–∞–≥ 3 –∏–∑ 3: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\n"
        f"üìß <b>Email:</b> {escape_email(email)}\n"
        f"üîê <b>–ü–∞—Ä–æ–ª—å:</b> {masked_password}\n"
        f"üåê <b>–°–µ—Ä–≤–µ—Ä:</b> smtp.yandex.ru:587\n\n"
        "‚ö° <b>–ì–æ—Ç–æ–≤–æ –∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—é!</b>\n\n"
        "‚úÖ –ù–∞–∂–º–∏—Ç–µ <b>\"–ü–æ–¥–∫–ª—é—á–∏—Ç—å –ø–æ—á—Ç—É\"</b> –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è\n"
        "‚úèÔ∏è –ò–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏\n\n"
        "üìö <b>–í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã?</b> –ü–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",
        reply_markup=confirmation_keyboard.as_markup(),
        parse_mode="HTML"
    )
    
    await state.set_state(EmailSetupStates.confirming_setup)

@router.callback_query(F.data == "email_setup_save")
async def email_setup_save(callback: CallbackQuery, state: FSMContext):
    """–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    # –°—Ä–∞–∑—É –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ callback —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å timeout
    await callback.answer()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    current_state = await state.get_state()
    print(f"DEBUG: Current state: {current_state}")
    
    data = await state.get_data()
    email = data.get('email')
    password = data.get('password')
    
    print(f"DEBUG: Email: {email}, Password length: {len(password) if password else 0}")
    
    if not email or not password:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ—Ç–µ—Ä—è–Ω—ã</b>\n\n"
            "üîÑ –ù–∞—á–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ",
            parse_mode="HTML"
        )
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    await callback.message.edit_text(
        "üîÑ <b>–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...</b>\n\n"
        "‚è≥ –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SMTP...\n"
        "üí° –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –¥–æ 30 —Å–µ–∫—É–Ω–¥",
        parse_mode="HTML"
    )
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∑–¥–µ—Å—å –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        from utils.email_sender_real import RealEmailSender
        
        real_sender = RealEmailSender()
        
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º —Ç–∞–π–º–∞—É—Ç–æ–º
        test_result = await real_sender.test_connection(email, password)
        
        if test_result['success']:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            user_id = callback.from_user.id
            email_data = {
                'email': email,
                'password': password,
                'smtp_server': 'smtp.yandex.ru',
                'smtp_port': 587,
                'setup_date': data.get('setup_date', ''),
                'test_result': test_result
            }
            
            await user_tokens.save_token(user_id, "email_smtp", {'access_token': 'smtp_configured', 'user_info': email_data})
            
            await callback.message.edit_text(
                "üéâ <b>–ü–æ—á—Ç–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!</b>\n\n"
                f"üìß <b>Email:</b> {escape_email(email)}\n"
                f"‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> –ê–∫—Ç–∏–≤–Ω–∞\n"
                f"üïê <b>–ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–æ:</b> –¢–æ–ª—å–∫–æ —á—Ç–æ\n\n"
                "üöÄ <b>–¢–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
                "‚Ä¢ ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º\n"
                "‚Ä¢ üì• –ß—Ç–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö\n"
                "‚Ä¢ üîç –ü–æ–∏—Å–∫ –ø–æ –ø–æ—á—Ç–µ\n"
                "‚Ä¢ ü§ñ AI –∞–Ω–∞–ª–∏–∑ –ø–∏—Å–µ–º\n\n"
                "üí° <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å:</b>\n"
                "\"–æ—Ç–ø—Ä–∞–≤—å test@example.com –æ–± —Ç–µ—Å—Ç–æ–≤–æ–º –ø–∏—Å—å–º–µ\"",
                parse_mode="HTML"
            )
            
            # –ö–†–ò–¢–ò–ß–ï–°–ö–ò –í–ê–ñ–ù–û: –û—á–∏—Å—Ç–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
            await state.clear()
            return
            
        else:
            error_msg = test_result.get('error', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞')
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –¥–ª—è –±–æ–ª–µ–µ —Ç–æ—á–Ω–æ–≥–æ —Å–æ–≤–µ—Ç–∞
            suggestion = test_result.get('suggestion', '')
            
            if suggestion == 'smtp_blocked':
                advice = "SMTP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ VPN."
            elif 'timeout' in error_msg.lower() or 'timed out' in error_msg.lower() or '10060' in error_msg:
                advice = "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Ç–∞–π–º–∞—É—Ç–æ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∏—Ç–µ VPN/–ø—Ä–æ–∫—Å–∏."
            elif 'authentication' in error_msg.lower() or 'login' in error_msg.lower():
                advice = "–ü—Ä–æ–±–ª–µ–º–∞ —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ –≤–∫–ª—é—á–∏—Ç–µ 2FA."
            else:
                advice = "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, 2FA –∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ."
            
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏
            await send_error_message(callback, advice, error_msg, state)
    
    except Exception as e:
        error_detail = str(e)[:150]
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—à–∏–±–∫–∏
        await send_error_message(callback, "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏", error_detail, state)

@router.callback_query(F.data == "email_setup_force_save")
async def email_setup_force_save(callback: CallbackQuery, state: FSMContext):
    """–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    await callback.answer()
    
    data = await state.get_data()
    email = data.get('email')
    password = data.get('password')
    
    if not email or not password:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –ø–æ—Ç–µ—Ä—è–Ω—ã</b>\n\n"
            "üîÑ –ù–∞—á–Ω–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ",
            parse_mode="HTML"
        )
        return
    
    try:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        user_id = callback.from_user.id
        email_data = {
            'email': email,
            'password': password,
            'smtp_server': 'smtp.yandex.ru',
            'smtp_port': 587,
            'setup_date': data.get('setup_date', ''),
            'test_result': {'success': False, 'message': '–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è'}
        }
        
        await user_tokens.save_token(user_id, "email_smtp", {'access_token': 'smtp_configured', 'user_info': email_data})
        
        await callback.message.edit_text(
            "üíæ <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!</b>\n\n"
            f"üìß <b>Email:</b> {escape_email(email)}\n"
            f"‚ö†Ô∏è <b>–°—Ç–∞—Ç—É—Å:</b> –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n"
            "üöÄ <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
            "‚Ä¢ ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–∏—Å–µ–º\n"
            "‚Ä¢ üì• –ß—Ç–µ–Ω–∏–µ –≤—Ö–æ–¥—è—â–∏—Ö\n"
            "‚Ä¢ üîç –ü–æ–∏—Å–∫ –ø–æ –ø–æ—á—Ç–µ\n"
            "‚Ä¢ ü§ñ AI –∞–Ω–∞–ª–∏–∑ –ø–∏—Å–µ–º\n\n"
            "üí° <b>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–∏—Å—å–º–æ:</b>\n"
            "\"–æ—Ç–ø—Ä–∞–≤—å test@example.com –æ–± —Ç–µ—Å—Ç–æ–≤–æ–º –ø–∏—Å—å–º–µ\"\n\n"
            "üîß <b>–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –ø—Ä–æ–±–ª–µ–º—ã:</b>\n"
            "–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç–µ –ø–æ—á—Ç—É —á–µ—Ä–µ–∑ –º–µ–Ω—é —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏",
            parse_mode="HTML"
        )
        
    except Exception as e:
        await callback.message.edit_text(
            "‚ùå <b>–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫</b>\n\n"
            f"üîß –î–µ—Ç–∞–ª–∏: {str(e)[:100]}...\n\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ",
            reply_markup=setup_wizard.get_setup_menu(),
            parse_mode="HTML"
        )
    
    await state.clear()

@router.callback_query(F.data == "email_setup_troubleshoot")
async def email_setup_troubleshoot(callback: CallbackQuery):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ —Ä–µ—à–µ–Ω–∏—é –ø—Ä–æ–±–ª–µ–º"""
    await callback.answer()
    
    troubleshoot_text = """
üîß <b>–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º</b>

<b>üö´ SMTP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –ø—Ä–æ–≤–∞–π–¥–µ—Ä–æ–º:</b>
‚Ä¢ üì± –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
‚Ä¢ üõ°Ô∏è –û—Ç–∫–ª—é—á–∏—Ç–µ VPN/–ø—Ä–æ–∫—Å–∏
‚Ä¢ üî• –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –±—Ä–∞–Ω–¥–º–∞—É—ç—Ä
‚Ä¢ üìû –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É

<b>üîê –ü—Ä–æ–±–ª–µ–º—ã —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π:</b>
1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ <code>id.yandex.ru</code>
2. –í–∫–ª—é—á–∏—Ç–µ –¥–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é
3. –°–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
4. –í–∫–ª—é—á–∏—Ç–µ IMAP –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –ø–æ—á—Ç—ã

<b>üìß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ IMAP –≤ –Ø–Ω–¥–µ–∫—Å:</b>
1. –û—Ç–∫—Ä–æ–π—Ç–µ <code>mail.yandex.ru</code>
2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü–æ—á—Ç–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
3. –í–∫–ª—é—á–∏—Ç–µ "–î–æ—Å—Ç—É–ø –ø–æ IMAP"

<b>üéØ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤:</b>
–í—ã–ø–æ–ª–Ω–∏—Ç–µ –≤ PowerShell:
<code>Test-NetConnection smtp.yandex.ru -Port 587</code>
<code>Test-NetConnection imap.yandex.ru -Port 993</code>

üí° <b>–°–æ–≤–µ—Ç:</b> –ï—Å–ª–∏ SMTP –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —á—Ç–µ–Ω–∏—è –ø–∏—Å–µ–º. –û—Ç–ø—Ä–∞–≤–∫–∞ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –≤ —Ä–µ–∂–∏–º–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —Ñ–∞–π–ª—ã.
    """
    
    builder = InlineKeyboardBuilder()
    builder.add(
        InlineKeyboardButton(text="üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –µ—â–µ —Ä–∞–∑", callback_data="email_setup_save"),
        InlineKeyboardButton(text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –±–µ–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è", callback_data="email_setup_force_save"),
        InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="email_setup_save")
    )
    builder.adjust(1, 1, 1)
    
    try:
        await callback.message.edit_text(
            troubleshoot_text,
            reply_markup=builder.as_markup(),
            parse_mode="HTML"
        )
    except Exception as edit_error:
        # –ï—Å–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await callback.message.answer(
            troubleshoot_text,
            reply_markup=builder.as_markup(),
            parse_mode="HTML"
        )

@router.callback_query(F.data.startswith("email_setup_edit_"))
async def email_setup_edit(callback: CallbackQuery, state: FSMContext):
    """–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∏"""
    edit_type = callback.data.split("_")[-1]
    
    if edit_type == "email":
        navigation_keyboard = InlineKeyboardBuilder()
        navigation_keyboard.add(
            InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://teletype.in/@asterioai/yandex-mail"),
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="connect_yandex_mail"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="email_setup_cancel")
        )
        navigation_keyboard.adjust(1, 2)
        
        await callback.message.edit_text(
            "‚úèÔ∏è <b>–ò–∑–º–µ–Ω–∏—Ç—å email</b>\n\n"
            "üìù –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π email –æ—Ç –Ø–Ω–¥–µ–∫—Å:\n"
            "(–Ω–∞–ø—Ä–∏–º–µ—Ä: your_name@yandex.ru)\n\n"
            "‚ö†Ô∏è <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∞–¥—Ä–µ—Å–∞:</b>\n"
            "‚Ä¢ @yandex.ru ‚Ä¢ @yandex.com ‚Ä¢ @ya.ru ‚Ä¢ @narod.ru",
            reply_markup=navigation_keyboard.as_markup(),
            parse_mode="HTML"
        )
        await state.set_state(EmailSetupStates.waiting_for_email)
    
    elif edit_type == "password":
        navigation_keyboard = InlineKeyboardBuilder()
        navigation_keyboard.add(
            InlineKeyboardButton(text="üìò –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", url="https://teletype.in/@asterioai/yandex-mail"),
            InlineKeyboardButton(text="‚óÄÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å email", callback_data="email_setup_edit_email"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="email_setup_cancel")
        )
        navigation_keyboard.adjust(1, 2)
        
        await callback.message.edit_text(
            "üîë <b>–ò–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è</b>\n\n"
            "üîê –í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –ø–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:\n\n"
            "üí° <b>–ì–¥–µ –ø–æ–ª—É—á–∏—Ç—å:</b>\n"
            "1. <code>id.yandex.ru</code> ‚Üí –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å\n"
            "2. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è \"Telegram Bot\"\n\n"
            "üìö –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∫–Ω–æ–ø–∫–µ –≤—ã—à–µ",
            reply_markup=navigation_keyboard.as_markup(),
            parse_mode="HTML"
        )
        await state.set_state(EmailSetupStates.waiting_for_password)
    
    await callback.answer()

@router.callback_query(F.data == "email_setup_cancel")
async def email_setup_cancel(callback: CallbackQuery, state: FSMContext):
    """–û—Ç–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É"""
    await callback.message.edit_text(
        "‚ùå <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞</b>\n\n"
        "üí° –í—ã –º–æ–∂–µ—Ç–µ –Ω–∞—á–∞—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫—É –∑–∞–Ω–æ–≤–æ –≤ –ª—é–±–æ–µ –≤—Ä–µ–º—è —á–µ—Ä–µ–∑ –º–µ–Ω—é\n"
        "\"üìß –ü–æ–¥–∫–ª—é—á–∏—Ç—å –ü–æ—á—Ç—É\"",
        parse_mode="HTML"
    )
    
    await state.clear()
    await callback.answer()

@router.message(F.text.contains("–ø–æ–º–æ—â—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø–æ—á—Ç—ã"))
async def email_help_command(message: Message):
    """–ü–æ–º–æ—â—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –ø–æ—á—Ç—ã"""
    help_text = """
üÜò <b>–ü–æ–º–æ—â—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–æ–π –Ø–Ω–¥–µ–∫—Å.–ü–æ—á—Ç—ã</b>

<b>üîê –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞—Ä–æ–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è:</b>
1. –ó–∞–π–¥–∏—Ç–µ –Ω–∞ <code>id.yandex.ru</code>
2. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ "–ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å"
3. –í–∫–ª—é—á–∏—Ç–µ "–î–≤—É—Ö—Ñ–∞–∫—Ç–æ—Ä–Ω—É—é –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é"
4. –ù–∞–π–¥–∏—Ç–µ "–ü–∞—Ä–æ–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π"
5. –°–æ–∑–¥–∞–π—Ç–µ –ø–∞—Ä–æ–ª—å —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º "Telegram Bot"

<b>üìß –í–∫–ª—é—á–µ–Ω–∏–µ IMAP:</b>
1. –û—Ç–∫—Ä–æ–π—Ç–µ <code>mail.yandex.ru</code>
2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ‚Üí –ü–æ—á—Ç–æ–≤—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã
3. –í–∫–ª—é—á–∏—Ç–µ "–î–æ—Å—Ç—É–ø –ø–æ IMAP"

<b>üîß –ï—Å–ª–∏ SMTP –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω:</b>
‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –º–æ–±–∏–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–Ω–µ—Ç
‚Ä¢ –û—Ç–∫–ª—é—á–∏—Ç–µ VPN/–ø—Ä–æ–∫—Å–∏
‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –ø—Ä–æ–≤–∞–π–¥–µ—Ä—É

<b>üí° –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:</b>
–ú–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∂–∏–º "—Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ" - –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–∏—Å–µ–º —Ä–∞–±–æ—Ç–∞–µ—Ç –¥–∞–∂–µ –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.

–î–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–∂–º–∏—Ç–µ /start
    """
    
    await message.answer(help_text, parse_mode="HTML")